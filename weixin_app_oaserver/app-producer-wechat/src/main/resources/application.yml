
#数据源
spring:
    datasource:
        url: jdbc:mysql://${jdbc.database.path}/${jdbc.database.name}?useUnicode=true&characterEncoding=utf8
        driver-class-name: ${jdbc.database.driverClassName}
        username: ${jdbc.database.username}
        password: ${jdbc.database.password}
        platform: mysql
        type: com.alibaba.druid.pool.DruidDataSource
        #下面为连接池的补充设置，应用到上面所有数据源中
        #初始化大小，最小，最大
        maxActive: ${jdbc.maxActive}
        initialSize: ${jdbc.initialSize}
        maxWait: ${jdbc.maxWait}
        minIdle: ${jdbc.minIdle}
        #打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: ${jdbc.poolPreparedStatements}
        maxPoolPreparedStatementPerConnectionSize: ${jdbc.maxPoolPreparedStatementPerConnectionSize}
        #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        #配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 30000
        validationQuery: select 'x'
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        #通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        
    activemq:
        broker-url: ${activite.path}
        user: ${activite.username}
        password: ${activite.password}
        in-memory: true
        pool:
            enabled: false
            max-connections: 100
queue: app-pro

#热部署配置
devtools:
restart:
    #热部署生效
    enabled: true
    #启用/禁用自动配置更改的记录
    log-condition-evaluation-delta: false
    #排除那个目录的文件不需要restart
    exclude: template/**
    #添加那个目录的文件需要restart
    additional-paths: src/main/java

mvc:
    #出现错误时, 直接抛出异常
    throw-exception-if-no-handler-found: true
