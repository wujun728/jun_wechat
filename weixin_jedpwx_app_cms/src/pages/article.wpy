<template lang="wxml">
  <import src="../wxParse/wxParse.wxml"/>
  <view class="art-header" style="display:display;overflow-x:hidden;">
  <image class="art-img" src="{{imageHref}}"></image>
  <!--<view class="art-title">{{articles.title}}</view>-->
  </view>
  <view class="wxParse-p big_images" style="overflow-x:hidden;">
  <!--<rich-text class="art-content" nodes="{{articles.content}}" ></rich-text>-->
  <template is="wxParse" data="{{wxParseData:article.nodes}}"/>
  </view>
</template>


<script>
  import wepy from 'wepy';
  import api from '../api/api';
  import tip from '../utils/tip';
  import WxParse from '../wxParse/wxParse.js';

  export default class Article extends wepy.page {
    config = {
      "navigationBarTitleText": '',
      "backgroundTextStyle": 'light',
      "navigationBarBackgroundColor": '#fff',
      "navigationBarTextStyle": 'black'
    };
    components = {};

    data = {
      domain: '',
      isShow:'',
      articlesId: 0,
      detail: {},
      imageHref :''
    };
    methods = {
      onShareAppMessage(res){
          var that = this;
          if (res.from === 'button') {
              console.log("来自页面内转发按钮");
              console.log(res.target);
          }
          return {
              title: that.detail.title,
              path: 'pages/article?articlesId='+ that.articlesId,
              success: function(res){
                  console.log("转发成功", res);
              },
              fail: function(res){
                  console.log("转发失败", res);
              }
          }
      }
    };

    events = {};

    onLoad(options) {
      var that = this;
      that.articlesId = options.articlesId;
      that.domain = api.apiAdUpload;
      that.detail = {};
      that.imageHref = '';
      that.$apply();
      that.getArticlesDetail();
    }

    wxParseImgLoad(e) {
    }

    async getArticlesDetail() {
      let that = this;
      console.log(that.articlesId);
      const articlesJson =  await api.queryOneArticles({
        query: {
          articlesId: that.articlesId
        }
      });
      if (articlesJson.data.success == true) {
        this.detail = articlesJson.data.obj;
        wx.setNavigationBarTitle({
          title: that.detail.title  //页面标题为动态参数
        })
        this.imageHref = this.domain + that.detail.imageHref;
        console.log(that.imageHref);
        console.log(that.domain);
        WxParse.wxParse('article', 'html', that.detail.content, this);
        that.$apply();
      } else {
        tip.error(articlesJson.data.msg);
      }
    }

  }
</script>


<style lang="less">
  @import "../wxParse/wxParse.wxss";
  view{max-width:100%;}
  .art-header {
    position: relative;
    width: 100%;
    height: 219px;
    color: #FFF;
  }

  .art-img {
    width: 100%;
    height: 219px;
  }

  .art-title {
    position: absolute;
    bottom: 36px;
    left: 8px;
    font-size: 16px;
  }

  .art-source {
    position: absolute;
    bottom: 8px;
    font-size: 14px;
    right: 8px;
  }

  .art-content {
    font-size: 14px;
    color: #616466;
    padding-left: 16px;
    padding-right: 16px;
    padding-top: 10px;
    background-color: #FFF;
    line-height: 1.5;
  }

  .big_images {
    height: 100%;
    display: block;
    margin-bottom: 90rpx;
    padding-left: 30rpx;
    padding-right: 30rpx;
    font-size:32rpx;
    image {
      width:100%;
    }
  }
</style>
