
第1章　微信公众平台介绍
微信一经推出，便如星火燎原之势发展，截至2013年11月注册用户量已经突破6亿，月活跃用户已经超过2.7亿，而公众账号数量也已突破200万，是亚洲地区用户群体最大的移动端即时通信软件，同时也被公认为目前唯一拿到移动互联网门票的应用。
本章主要介绍微信公众平台的使用，帮助读者熟悉相关操作，为后面的开发学习提供基础。
1.1　微信及其两大平台
微信（英文名：WeChat）是腾讯公司于2011年初推出的一款手机聊天软件，该软件支持发送文字、表情、图片、语音、视频、位置、链接，以及语音实时对讲。用户可以通过“添加QQ好友”、“添加手机联系人”、“扫一扫”、“摇一摇”、“附近的人”、“一起按”、“搜号码”、“查找公众号”等多种方式添加好友或关注微信公众账号，也可以将内容发送给好友以及分享到朋友圈。同时微信还提供“微信支付”、“理财通”、“微信红包”、“嘀嘀打车”、“表情”、“游戏”等贴近生活的功能。
微信由腾讯公司广州研发中心产品团队开发，该团队经理张小龙被称为“微信之父”，公司总裁马化腾确定该产品的名称为“微信”。
微信的官方网站是http://weixin.qq.com/。图1-1是微信图标。
2012年8月23日，腾讯公司推出微信公众平台，其宣传口号是“再小的个体，也有自己的品牌”。微信公众平台是微信公众账号所有者(政府、媒体、企业、组织或个人等)进行品牌推广、减少运营成本、提高影响力、与用户互动交流及提供服务的平台，公众账号通过消息、事件、菜单等交互方式为用户提供服务。例如：公众账号“招商银行信用卡中心”为持卡人提供信用卡绑定、查询信用卡账单、额度及积分；快速还款、申请账单分期；微信转接人工服务；信用卡消费，微信免费笔笔提醒等功能，同时还为非持卡人提供微信办卡功能。微信公众平台的官方网址是https://mp.weixin.qq.com/。微信公众平台还有国际版（也称海外版），其官方网址为https://admin.wechat.com/。
除了公众平台以外，还有微信开放平台。微信开放平台是为移动应用开发者提供的内容分享接口，开发者可以在iOS、Android以及Windows Phone 8平台上使用开放平台的SDK来开发分享功能，使用户可以在App上分享内容给微信好友和微信朋友圈。微信开放平台的官方网址是http://open.weixin.qq.com。
1.2　微信公众平台
使用微信公众平台之前需要先在微信官方网站上注册微信公众账号，在注册过程中需要进行信息登记，要求选择相应的运营主体是组织还是个人，其中组织类型又细分为政府、媒体、企业、其他组织等类型。根据运营主体的不同，要求提供不同的资质材料及证明。
当运营主体为组织时，可以选择公众账号类型是订阅号还是服务号。
服务号的特点是：每月可群发一条信息给粉丝，群发的消息不显示在聊天列表，下发消息即时通知粉丝，默认可以自动获得自定义菜单，可以申请微信认证获得高级接口权限，服务号旨在为用户提供服务。订阅号的特点是：每天可群发一条消息给粉丝，群发消息隐藏在订阅号文件夹，群发消息不会提示推送，认证后可申请自定义菜单，订阅号主要用于提供信息和资讯。
需要注意的是，公众账号只有一次机会选择成为订阅号还是服务号，账号的名称及微信号一旦确定就不能再修改，所以做出决定之前需要慎重。
登录微信公众平台以后，可以看到导航菜单、公众账号类型及名称等基本信息，如图1-2所示。

图1-2　微信公众平台后台
接下来以微信公众账号“方倍工作室”为主要例子，介绍微信公众平台的各项菜单及使用。
1.2.1　功能
微信公众平台导航菜单第一项“功能”包括群发功能和高级功能。
1．群发功能
群发功能是微信公众平台最常用也最重要的功能之一。
根据需要，运营人员填写文字（图片、语音、视频或图文等，需要先上传素材）内容后，选择群发对象、性别、群发地区发送即可。获得微信支付权限的公众账号还能群发商品信息。
群发功能界面如图1-3所示。

图1-3　新建群发消息
在“已发送”页面中，可以看到已经群发的消息，如图1-4所示。

图1-4　已群发的消息
2．高级功能
在高级功能中可以启用开发模式或编辑模式。只可启用一种模式，但可以随时切换到另一种。
在编辑模式下，可以通过简单的界面编辑来设置自动回复，服务号还有底部自定义菜单功能。开发模式下，开发者可以通过公众平台提供的接口实现自动回复、获取订阅者、自定义菜单功能。关于开发模式的使用，后面的章节中将有详细的介绍。
在编辑模式下，可以设置三种类型的自动回复。
被添加自动回复：是指当微信用户关注你的微信公众账号时自动推送的一条内容，支持文字、图片、语音、视频等类型。
消息自动回复：当微信用户发送消息给公众账号时，若未设置关键词自动回复或匹配不到相关的关键词，系统会自动推送该消息给粉丝。该类型信息1个小时内回复1～2条。
关键词自动回复：用户发送的消息内如果有已设置的关键词即可把设置在此规则名中回复的内容自动发送给用户。这种回复类型是编辑模式最核心的功能。图1-5展示了关键词自动回复的设置方法。
关键词自动回复有更详细的规则及使用方法，具体内容可以参考附录A。
通过设置上面三种类型的自动回复，可以完成一个全面的微信公众账号的内容回复。图1-6依次展示了三种自动回复的内容。
		
	图1-5　关键词自动回复	图1-6　编辑模式下的自动回复
拥有自定义菜单权限的账号，也可以编辑模式创建自定义菜单。最多可以创建3个一级菜单，每个一级菜单下可创建最多5个二级菜单。每个菜单创建后需要为其设置响应动作。响应动作包括发送消息和跳转到网页。其中消息包括文字、图片、语音、视频或图文消息。图1-7展示了自定义菜单设置及其中一个子菜单回复图文消息的设置。
图1-7的自定义菜单发布后，效果如图1-8所示。
		
	图1-7　自定义菜单设置	图1-8　自定义菜单效果图
很多没有开发能力或者暂未使用开发模式来实现功能的运营者目前都使用编辑模式来运营公众账号。依托自动回复及自定义菜单两种功能，在编辑模式下也能快速、简单地实现很多实用且有趣的功能。当然，编辑模式下的功能还略显不足，比如，所有用户的回复都是一样的，对于天气、快递等数据经常更新的功能没有办法做到实时更新。要实现更强大的功能，就需要使用开发模式。
1.2.2　管理
微信公众平台导航菜单第二项“管理”包括消息管理、用户管理和素材管理。
1．消息管理
在消息管理中，可以查看全部消息（最近5天的消息），也可以查看今天、昨天、前天、更早以及星标消息的消息内容，另外还可以搜索消息内容，如图1-9所示。鼠标移动到某条消息上，可以对其进行快捷回复以及点击星标收藏该消息，收藏后的消息在后台永久保存。

图1-9　消息管理
2．用户管理
用户管理中，可以实现新建用户分组，移动用户至指定分组以及修改用户备注功能，如图1-10所示。鼠标移至用户头像上可以查看用户性别、地区、签名等信息。另外，移至黑名单的用户将不能获得任何回复。

图1-10　用户管理
3．素材管理
素材管理中，保存了用户新建的图文消息、图片、语音及视频消息，如
图1-11所示。这些消息可以用于编辑模式的自动回复，也能用于群发功能。

图1-11　素材管理
图文消息包括单图文消息以及多图文消息。图文消息包括以下几个部分：标题、封面图片、作者（选填）、摘要（仅单图文消息）、正文、原文链接（选填），如图1-12所示。其中多图文消息最多包含8条图文信息。而在开发模式下，多图文消息最多可以包含10条。

图1-12　图文消息
1.2.3　服务
微信公众平台导航菜单第三项“服务”包括服务中心和我的服务。
1．服务中心
服务中心显示了公众平台为当前公众账号提供的接口功能。目前主要有基础接口、自定义菜单、微信认证、高级接口、商户功能等服务。账号类型不同，所提供的服务也有所不同。图1-13显示了一个服务号可获得的服务。

图1-13　服务中心
2．我的服务
我的服务显示了当前公众账号所获得的服务项。图1-14显示了一个服务号所获得的服务。

图1-14　我的服务
1.2.4　统计
微信公众平台导航菜单第四项“统计”包括用户分析、图文分析、消息分析和接口分析。 
1．用户分析
用户分析主要分为用户增长和用户属性两大模块。用户增长模块按日、周、月显示新关注人数、取消关注人数、净增关注人数、累积关注人数等几项指标，如图1-15所示。用户属性模块中，可以根据性别、省份、城市、语言查看分布
情况。

图1-15　用户分析
2．图文分析
图文分析主要分为图文群发和图文统计两大模块。图文群发模块可以查看每篇图文消息的送达人数、图文页阅读人数/次数、原文页阅读人数/次数/转化率、分享转发人数/次数，如图1-16所示。而图文统计模块中，可以根据周期（日或小时）查看图文页阅读、原文页阅读、分享转发等指标情况。

图1-16　图文分析
3．消息分析
消息分析中，可以根据周期（日或小时）查看消息发送人数、消息发送次数、人均发送次数等指标的情况，如图1-17所示。

图1-17　消息分析
4．接口分析
使用开发模式的公众账号，可以根据周期（日或小时）查看调用次数、失败率、平均耗时、最大耗时等指标的情况，如图1-18所示。

图1-18　接口分析
1.2.5　设置
微信公众平台第五项“设置”包括账号信息、公众号助手和安全中心。
1．账号信息
账号信息页面显示了公众账号的头像、名称、登录邮箱、原始ID、微信号、隐私设置、类型、认证情况、地区、功能介绍、腾讯微博、二维码、图片水印等信息。图1-19显示了账号的部分信息。

图1-19　账号信息
二维码是用户关注公众账号的一个重要入口。也是企业在微信公众平台上对外进行传播推广时的一张重要名片。微信公众平台提供5种不同尺寸的二维码供运营者下载。方倍工作室的二维码图片如图1-20所示。读者可以使用微信的“扫一扫”功能，扫描该二维码即可关注我们。
2．公众号助手
公众号助手可以用来代替公众平台群发信息，并可随时查看消息群发状态。运营者可以用个人微信号来确定绑定，绑定后个人微信号将自动关注公众号助手。以后向公众号助手发送的内容，系统将自动群发给所有关注公众账号的用户。绑定界面如图1-21所示。

图1-21　公众号助手
3．安全中心
安全中心可以开启手机保护功能，开通手机保护后，登录时需要输入手机验证码进行验证后才可正常登录。启用手机保护设置如图1-22所示。

图1-22　手机保护设置




第2章　获取服务器资源
使用微信公众平台开发模式需要拥有自己的服务器资源，用于存放自己开发的程序文件。本章将主要介绍如何申请免费的新浪SAE应用空间以及上传接口程序文件。如果自己拥有云主机或虚拟主机，那么使用自有的服务器也是不错的一个选择。
2.1　新浪SAE
Sina App Engine（以下简称SAE）是新浪研发中心于2009年8月开始内部开发，并在2009年11月3日正式推出第一个Alpha版本的国内首个公有云计算平台（http://sae.sina.com.cn），SAE是新浪云计算战略的核心组成部分。
SAE作为国内的公有云计算，从开发伊始借鉴吸纳Google、Amazon等国外公司的公有云计算的成功技术经验，并很快推出不同于他们的具有自身特色的云计算平台。SAE选择在国内流行最广的Web开发语言PHP作为首选的支持语言，Web开发者可以在Linux、Mac、Windows上通过SVN或者Web版在线代码编辑器进行开发、部署、调试，团队开发时还可以进行成员协作，不同的角色将对代码、项目拥有不同的权限；SAE提供了一系列分布式计算、存储服务供开发者使用，包括分布式文件存储、分布式数据库集群、分布式缓存、分布式定时服务等，这些服务将大大降低开发者的开发成本。同时SAE整体架构的高可靠性和新浪的品牌保证大大降低了开发者的运营风险。另外，作为典型的云计算，SAE采用“所付即所用，所付仅所用”的计费理念，通过日志和统计中心精确地计算每个应用的资源消耗（包括CPU、内存、磁盘等）。
总之，SAE就是简单高效的分布式Web服务开发、运行平台。
2.1.1　申请账号
SAE的注册地址为http://sae.sina.com.cn/?m=user&a=reg，在浏览器中输入该网址，将自动跳转到“SAE新浪云计算平台”在新浪微博的应用授权界面，如
图2-1所示。
如果你还没有新浪微博账号，需要注册一个，注册新浪微博账号的过程比较简单，本书就不再介绍了。在图2-1中填写新浪微博账号及密码之后，点击“登录”按钮，将跳转到授权确认页面，如图2-2所示。
点击“授权”按钮，将跳转到SAE的用户注册页面，如图2-3所示。
填写真实姓名、安全邮箱、安全密码、确认密码、绑定手机及验证码之后，点击“下一步”按钮，将跳转到手机号验证页面，如图2-4所示。

图2-1　SAE登录界面

图2-2　SAE新浪云计算平台授权确认页面

图2-3　SAE用户注册页面

图2-4　SAE手机认证页面
填写手机收到的短信验证码后，点击“验证手机”按钮，将提示注册成功。
至此，我们成功注册了SAE账号。
2.1.2　创建应用
使用注册成功的新浪微博账号登录SAE，登录后界面如图2-5所示。

图2-5　SAE登录页面
在最上方右侧的导航列表中，点击“我的应用”链接，再从下拉列表中选择“应用列表”链接，将跳转到“应用列表”页面，如图2-6所示。
点击页面中的“创建新应用”按钮，这时会弹出提示框，提示禁止放置违法违规内容，点击“继续创建”按钮，弹出创建应用页面，如图2-7所示。

图2-7　创建应用
在应用创建页面中，依次填写二级域名（AppID）、应用名称、验证码，开发语言选择PHP，应用类型选择web应用。如果AppID已经被其他人注册，会提示已经被占用，需要重新填入。填写完毕后，点击“创建应用”按钮，将弹出安全认证框，系统将要求输入安全密码，在正确输入安全密码之后，将提示创建成功，如图2-8所示。
应用创建成功之后，会自动跳转到应用列表中，在应用列表中可以看到刚才创建的应用。
2.1.3　创建版本
在应用列表中，点击刚才创建的应用cctv15，进入应用信息页面，如图2-9所示。

图2-9　应用信息
找到左侧目录下的“应用管理”，点击下面的“代码管理”链接，跳转到代码管理页面，如图2-10所示。

图2-10　代码管理
点击右侧的“这里创建一个版本”按钮，将弹出创建版本页面，如图2-11
所示。
版本号默认为1，可以不更改，直接点击“创建”按钮，如图2-12所示。
		
	图2-11　创建版本	图2-12　创建版本成功
至此，就成功创建了一个域名URL为 http://cctv15.sinaapp.com/的SAE应用了。这个URL将会在后面用到。
2.1.4　上传代码
将以下PHP代码保存到文件index.php。或者直接使用微信官方提供的文件。
<?php
/*
    方倍工作室 http://www.cnblogs.com/txw1958/
    CopyRight 2013 www.doucube.com  All Rights Reserved
*/

define("TOKEN", "weixin");
$wechatObj = new wechatCallbackapiTest();
if (isset($_GET['echostr'])) {
    $wechatObj->valid();
}else{
    $wechatObj->responseMsg();
}

class wechatCallbackapiTest
{
    public function valid()
    {
        $echoStr = $_GET["echostr"];
        if($this->checkSignature()){
            echo $echoStr;
            exit;
        }
    }

    private function checkSignature()
    {
        $signature = $_GET["signature"];
        $timestamp = $_GET["timestamp"];
        $nonce = $_GET["nonce"];

        $token = TOKEN;
        $tmpArr = array($token, $timestamp, $nonce);
        sort($tmpArr);
        $tmpStr = implode( $tmpArr );
        $tmpStr = sha1( $tmpStr );
        if( $tmpStr == $signature ){
            return true;
        }else{
            return false;
        }
    }

    public function responseMsg()
    {
        $postStr = $GLOBALS["HTTP_RAW_POST_DATA"];

        if (!empty($postStr)){
            $postObj = simplexml_load_string($postStr, 'SimpleXMLElement', LIBXML_NOCDATA);
            $fromUsername = $postObj->FromUserName;
            $toUsername = $postObj->ToUserName;
            $keyword = trim($postObj->Content);
            $time = time();
            $textTpl = "<xml>
                        <ToUserName><![CDATA[%s]]></ToUserName>
                        <FromUserName><![CDATA[%s]]></FromUserName>
                        <CreateTime>%s</CreateTime>
                        <MsgType><![CDATA[%s]]></MsgType>
                        <Content><![CDATA[%s]]></Content>
                        <FuncFlag>0</FuncFlag>
                        </xml>";
            if($keyword == "?" || $keyword == "？")
            {
                $msgType = "text";
                $contentStr = date("Y-m-d H:i:s",time());
                $resultStr = sprintf($textTpl, $fromUsername, $toUsername, $time, $msgType, $contentStr);
                echo $resultStr;
            }
        }else{
            echo "";
            exit;
        }
    }
}
?>
请注意，必须使用专业的开发软件来保存操作，如Notepad++，不要使用Windows自带的记事本等，保存时需设置格式为“UTF-8无BOM格式”。图2-13是Notepad++的设置。
然后使用压缩软件WinRAR将其压缩成ZIP格式（见图2-14），注意不能用RAR格式，因为SAE不支持RAR格式的文件上传。

图2-14　压缩ZIP文件
这样就会生成一个index.zip的压缩文件。
再回到我们之前创建的SAE应用的代码管理界面中，点击“操作”按钮，在下拉列表中选择“上传代码包”，如图2-15所示。

图2-15　选择上传代码包
选择上传代码包后，将弹出“代码上传”页面，点击“上传文件”按钮，选择刚才压缩的index.zip文件，点击“上传”按钮，上传成功后的界面如图2-16所示。

图2-16　代码上传
再次回到代码管理界面中，点击“操作”按钮，在下拉列表中选择“编辑代码”，如图2-17所示。
在新的代码编辑页面中，可以看到index.php已经上传成功，双击该文件可以查看源代码，如图2-18所示。

图2-17　编辑代码

图2-18　查看源代码
至此，新浪云应用的创建完成，并且成功上传了微信公众平台的接口文件。
2.2　虚拟主机
如果你已经拥有虚拟主机或云主机，那么可以将其用作微信公众平台开发模式的服务器资源。如果没有，也可以考虑购买一个虚拟空间，万网、新网、西部数码等老牌网络服务提供商均提供主机空间服务。本书使用PHP语言和MySQL数据库作为程序运行环境，如果想运行本书的代码，购买空间的时候需要选择支持PHP和MySQL的空间。购买成功后，将得到FTP上传地址、账号及密码，
图2-19显示的是西部数码产品tw009购买后的FTP信息。
在这个虚拟空间中，FTP地址为txw1958.gotoftp3.com，而二级域名地址为txw1958.gotoip3.com，这个二级域名将会在我们启用微信公众平台的时候需要填写使用。
我们使用FileZilla客户端来上传我们的代码。FileZilla是一款免费开源的FTP客户端软件，分为客户端版本和服务器版本，具备所有的FTP软件功能。可控性、有条理的界面和管理多站点的简化方式使得FileZilla客户端版成为一个方便高效的FTP客户端工具。它可以从官方网站下载，下载地址为：
https://filezilla-project.org/download.php?type=client

图2-19　西部数码tw009产品
在FillZilla客户端的菜单栏中，选择“文件”，再选择“站点管理器”，调出站点管理器。在站点管理器中，点击左下方的“新站点”按钮，填写站点名称，在右侧的站点信息中，填写FTP相关信息，如图2-20所示。

图2-20　站点管理器
填写完成后，点击“连接”按钮，将自动登录到FTP的远程站点上，并且列出目录，如图2-21所示。

图2-21　远程站点目录
双击wwwroot进入该站点的根目录，在根目录中新建一个weixin目录，然后把我们获得的index.php文件上传到weixin目录中，如图2-22所示。

图2-22　上传目录成功
至此，我们在虚假主机上成功上传了微信公众平台的接口文件。




第3章　开 发 模 式
由于编辑模式下仅能实现内容固定的自动回复，这远没有发挥微信公众平台的功能。如果想实现更强大、更精准的个性化功能的服务，就需要用到开发模式。本章将介绍启用开发模式以及一个简单的自动回复功能。
3.1　启用开发模式
3.1.1　关闭编辑模式
登录微信公众平台后台，依次进入菜单“功能”→“高级功能”页面，可以看到两种模式：编辑模式和开发模式，以及两种模式当前的开启状态，如图3-1所示。

图3-1　编辑模式和开发模式
点击“编辑模式”下方的“进入”链接，可以看到右上侧滑动开关处在开启状态，如图3-2所示。

图3-2　编辑模式已开启
点击右侧的滑动开关，将弹出确认操作框，如图3-3所示。
点击“确定”按钮，关闭编辑模式，滑动开关将滑动到关闭一侧。

图3-3　关闭操作确认
3.1.2　启用开发模式
点击开发模式页面，将看到尚未成为开发者的提示，如图3-4所示。
点击“成为开发者”按钮，将出现《微信公众平台开发者服务协议》，勾选同意协议并且点击“下一步”按钮后，将出现接口配置信息页面，如图3-5
所示。
在此处需要填写URL和Token。其中URL是开发者用来接收微信服务器数据的接口URL。Token可任意填写，用作生成签名（该Token会和接口URL中包含的Token进行比对，从而验证安全性）。
在上一章中，我们创建了新浪云计算平台应用，其域名URL为http://cctv15.sinaapp.com/，而Token在代码中定义为weixin。购买的虚拟主机URL为http://txw1958.gotoip3.com/，上传程序中Token也定义为weixin，我们使用SAE的URL和Token填入，提交成功，如图3-6所示。
		
	图3-5　接口配置信息	图3-6　成为开发者
此时开发模式还处于关闭状态，点击滑动开关，滑动开关将处在开启状态，开发模式已经开启，如图3-7所示。

图3-7　开发模式已开启
至此，开发模式已成功启用。
3.1.3　常见问题与解决方案
当我们在提交URL和Token时，有时会碰到提交不成功的情况，具体有以下几种。
1．请求URL超时
这种情况一般是由于服务器网速或响应速度太慢。可以重试几次或者等一段时间再来试，如果还是这样，则需要考虑更换速度更快、性能更好的服务器。
2．系统发生错误，请稍后重试
这种情况一般是由于微信服务器短时内的异常引起的，一般重试或者过一段时间尝试即可。
3．服务器没有正确响应Token验证，请阅读“消息接口使用指南”
这种情况需要具体分析验证过程卡在哪一个环节了。可以通过调用变量$_SERVER来获取服务器和执行环境信息来分析。
$_SERVER是一个包含了诸如头信息(header)、路径(path)以及脚本位置(script location)等信息的数组。这个数组中的项目由 Web 服务器创建。欲了解更多关于$_SERVER的信息，请访问官方网站：
http://www.php.net/manual/zh/reserved.variables.server.php
这里需要使用以下两个元素：
$_SERVER['REMOTE_ADDR']（来访者的IP地址，此处为微信服务器的IP）
$_SERVER['QUERY_STRING']（查询请求字符串，此处为微信服务器发过来的GET请求字符串）
将以上两个变量记录到日志中。函数定义如下：
function traceHttp()
{
    $content = date('Y-m-d H:i:s')."\nREMOTE_ADDR:".$_SERVER["REMOTE_ADDR"]."\nQUERY_STRING:".$_SERVER["QUERY_STRING"]."\n\n";
    
    if (isset($_SERVER['HTTP_APPNAME'])){   //SAE
        sae_set_display_errors(false);
        sae_debug(trim($content));
        sae_set_display_errors(true);
    }else {
        $max_size = 100000;
        $log_filename = "log.xml";
        if(file_exists($log_filename) and (abs(filesize($log_filename)) > $max_size)){unlink($log_filename);}
        file_put_contents($log_filename, $content, FILE_APPEND);
    }
}
上面代码中，当环境为SAE时，使用SAE的调试函数sae_debug()将内容记录到日志中。而在具有读写权限的空间下，使用file_put_contents()函数把字符串写入文件。
然后在程序的数据处理之前调用该函数，记录信息，代码如下所示：
define("TOKEN", "weixin");
traceHttp();
$wechatObj = new wechatCallbackapiTest();
if (isset($_GET['echostr'])) {
    $wechatObj->valid();
}else{
    $wechatObj->responseMsg();
}
当提交URL和Token验证时，程序目录下应当生成一个log.txt文件。内容如下：
2014-01-10 11:03:21
REMOTE_ADDR:101.226.61.144
QUERY_STRING:signature=6e35c6f3d3279338781047dbffd09426b9ecdee3&echostr=5979420653038092664&timestamp=1392001400&nonce=1392192345
综上可以得出初步结论：
如果没有生成日志文件：微信服务器没有访问你的服务器，需要先检查一下你的服务器是否可以通过公网访问，以及URL路径是否正确并且可以访问，如果公网能访问而微信服务器不能访问，那可能是防火墙拦截了80端口或微信服务器IP，也可能服务器所在区域与微信服务器通信不畅，此时需要更换服务器。
如果已经生成日志文件：查看REMOTE_ADDR和QUERY_STRING内容是否与上述类似。确认signature、timestamp、nonce、echostr四个参数都有值。如果这些都没有问题，则检查程序中定义的Token值是否和提交的一致，然后检查程序流程及数据处理是否与官方文档描述的一致。
3.2　实现自动回复
在前面的例子中，我们已经嵌入了一个简单的时间查询功能，发送一个问号“?”就能回复当前的时间，如图3-8所示。
至此，你的微信公众平台账号已经成功使用了开发模式，并且已经能够实现自动回复了。
3.3　消息交互原理分析
接下来结合上一章的代码来分析一下微信公众平台的消息交互原理。下面的代码基于微信公众平台官方示例代码修改而成。
 1 <?php
 2 /*
 3     方倍工作室 http://www.cnblogs.com/txw1958/
 4     CopyRight 2013 www.doucube.com  All Rights Reserved
 5 */
 6 
 7 define("TOKEN", "weixin");
 8 $wechatObj = new wechatCallbackapiTest();
 9 if (isset($_GET['echostr'])) {
10     $wechatObj->valid();
11 }else{
12     $wechatObj->responseMsg();
13 }
14 
15 class wechatCallbackapiTest
16 {
17     public function valid()
18     {
19         $echoStr = $_GET["echostr"];
20         if($this->checkSignature()){
21             echo $echoStr;
22             exit;
23         }
24     }
25 
26     private function checkSignature()
27     {
28         $signature = $_GET["signature"];
29         $timestamp = $_GET["timestamp"];
30         $nonce = $_GET["nonce"];
31 
32         $token = TOKEN;
33         $tmpArr = array($token, $timestamp, $nonce);
34         sort($tmpArr);
35         $tmpStr = implode( $tmpArr );
36         $tmpStr = sha1( $tmpStr );
37 
38         if( $tmpStr == $signature ){
39             return true;
40         }else{
41             return false;
42         }
43     }
44 
45     public function responseMsg()
46     {
47         $postStr = $GLOBALS["HTTP_RAW_POST_DATA"];
48 
49         if (!empty($postStr)){
50             $postObj = simplexml_load_string($postStr, 'SimpleXMLElement', LIBXML_NOCDATA);
51             $fromUsername = $postObj->FromUserName;
52             $toUsername = $postObj->ToUserName;
53             $keyword = trim($postObj->Content);
54             $time = time();
55             $textTpl = "<xml>
56                         <ToUserName><![CDATA[%s]]></ToUserName>
57                         <FromUserName><![CDATA[%s]]></FromUserName>
58                         <CreateTime>%s</CreateTime>
59                         <MsgType><![CDATA[%s]]></MsgType>
60                         <Content><![CDATA[%s]]></Content>
61                         <FuncFlag>0</FuncFlag>
62                         </xml>";
63             if($keyword == "?" || $keyword == "？")
64             {
65                 $msgType = "text";
66                 $contentStr = date("Y-m-d H:i:s",time());
67                 $resultStr = sprintf($textTpl, $fromUsername, $toUsername, $time, $msgType, $contentStr);
68                 echo $resultStr;
69             }
70         }else{
71             echo "";
72             exit;
73         }
74     }
75 }
76 ?>
首先看一下代码的结构。
第2行～第5行：注释部分。
第7行：使用define()函数定义常量，常量名称为TOKEN，常量的值为weixin，这个值就是在启用开发模式时填写的Token。
第15行～第75行：定义了一个类wechatCallbackapiTest，并在类中定义了3个方法valid()、checkSignature()和responseMsg()。
第8行～第13行：程序执行语句。第8行实例化了一个类对象。在第9行中，判断GET请求是否有echostr变量，如果有则执行valid()方法，否则执行responseMsg()方法。
其次分析微信消息交互流程。
在提交URL和Token申请验证时，微信服务器将发送GET请求到填写的URL上，并且带上4个参数（signature、timestamp、nonce和echostr），GET请求如下：
signature=6e35c6f3d3279338781047dbffd09426b9ecdee3&echostr=5979420653038092664&timestamp=1392001400&nonce=1392192345
上述请求参数说明如表3-1所示。
表3-1　请求校验参数说明
参数	描述
signature	微信加密签名，signature结合了开发者填写的token参数和请求中的timestamp参数、nonce参数
timestamp	时间戳
nonce	随机数
echostr	随机字符串

由于这个GET请求包含echostr变量，所以执行valid()方法，在该方法中，又调用了校验签名方法checkSignature()方法。如果签名校验为真，则原样输出变量$echoStr的值。
加密/校验流程如下：
1）第33行～第34行：将token、timestamp、nonce三个参数进行字典序排序。
2）第35行～第36行：将三个参数字符串拼接成一个字符串进行sha1加密。
3）第38行～第42行：开发者获得加密后的字符串可与signature对比，标识该请求来源于微信。
而在发送问号的时候，微信服务器将也会带上前面三个参数（signature、timestamp和nonce）访问开发者设置的URL，同时还会将消息的XML数据包POST到URL上。XML格式如下：
<xml>
    <ToUserName><![CDATA[gh_ba6050bc0be7]]></ToUserName>
    <FromUserName><![CDATA[oDeOAjgSJUX10wvImSRMSwmyQAyA]]></FromUserName>
    <CreateTime>1392043637</CreateTime>
    <MsgType><![CDATA[text]]></MsgType>
    <Content><![CDATA[?]]></Content>
    <MsgId>5978781895719912033</MsgId>
</xml>
而消息请求不包含echostr变量，所以将执行响应消息responseMsg()方法。
第47行：响应消息方法首先接收上述原始POST数据。
第50行：然后将数据载入对象中，对象名为SimpleXMLElement，LIBXML_NOCDATA表示将CDATA合并为文本节点。
第51行～第54行：取得XML类对象的值，并赋给新的变量，注意发送方变为接收方，接收方变为发送方。
第55行～第62行：构造要回复的XML数据包。
第63行：判断发送过来的关键字是不是问号。
第64行～第65行：设置回复的消息类型为text，内容为当前年月日时分秒。
第66行～第67行：封装回复的XML数据包，并且向微信服务器输出。XML格式如下所示：
<xml>
 <ToUserName><![CDATA[oDeOAjgSJUX10wvImSRMSwmyQAyA]]></ToUserName>
 <FromUserName><![CDATA[gh_ba6050bc0be7]]></FromUserName>
 <CreateTime>1392043638</CreateTime>
 <MsgType><![CDATA[text]]></MsgType>
 <Content><![CDATA[2014-01-05 11:43:23]]></Content>
</xml>
这样用户就会收到回复的消息，效果如图3-8所示。